/* autogenerated by Processing revision 1289 on 2023-01-16 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import ddf.minim.*;
import ddf.minim.analysis.*;
import ddf.minim.ugens.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Sound_Visualizer extends PApplet {





///developer stuff
boolean debugMode = false;
boolean batch = false;
///

//minim stuff
int bands = 1024;
Minim minim;
MultiChannelBuffer song;

//minim output vars
float[] spectrum = new float[bands];

public void setup(){
  /* size commented out by preprocessor */;
  //fullScreen(P3D);

  
  minim = new Minim(this);
  song = new MultiChannelBuffer(1000,1);
  float sampleRate = minim.loadFileIntoBuffer("shortTest.mp3",song);

  println(song.getChannelCount());
}

public void draw(){
  //analysis batch
  if(batch){

  }


  //draw
  render(spectrum);
}

public void render(float[] spec){
  background(0);
  stroke(255,0,0);
  noFill();
  ellipse(width/2,height/2,spec[0]*100+40,spec[0]*100+40);
}


  public void settings() { size(1024, 512, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Sound_Visualizer" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
